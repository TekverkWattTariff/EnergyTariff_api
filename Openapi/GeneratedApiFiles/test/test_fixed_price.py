# coding: utf-8

"""
    Grid Tariff API

    Provides grid tariffs from Swedish DSOs.

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.fixed_price import FixedPrice

class TestFixedPrice(unittest.TestCase):
    """FixedPrice unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FixedPrice:
        """Test FixedPrice
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FixedPrice`
        """
        model = FixedPrice()
        if include_optional:
            return FixedPrice(
                id = '216783ff-5dda-4c38-b491-d6f0fcee9a9b',
                name = 'Fusesize 25A',
                description = 'Fixed price for a contract with a fuse size of 25 A.',
                cost_function = '',
                components = [
                    openapi_client.models.fixed_price_component.FixedPriceComponent(
                        id = '216783ff-5dda-4c38-b491-d6f0fcee9a9b', 
                        name = 'Fusesize 25A', 
                        description = 'Fixed price for a contract with a fuse size of 25 A.', 
                        type = 'fixed', 
                        reference = 'main', 
                        valid_period = openapi_client.models.date_interval.DateInterval(
                            from_including = '2024-10-01', 
                            to_excluding = '2025-04-01', ), 
                        price = openapi_client.models.price.Price(
                            price_ex_vat = 1.337, 
                            price_inc_vat = 1.337, 
                            currency = 'SEK', ), 
                        priced_period = '', )
                    ]
            )
        else:
            return FixedPrice(
        )
        """

    def testFixedPrice(self):
        """Test FixedPrice"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
